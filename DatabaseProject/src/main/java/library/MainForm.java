package library;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Carlm
 * @author Arib Dhuka
 */
public class MainForm extends javax.swing.JFrame {

    boolean isUnpaidOnly = false;
    //holds the connection to the libray database
    LibraryConnection connection;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        //setup connection
        connection = new LibraryConnection();

        //initialize frame
        initComponents();

        //setup all tables
        updateBookTable();
        updateCheckedTable();
        updateFinesTable();
        updateBorrowersTable();

    }

    private void updateBorrowersTable() {
        try {
            setTable(borrowersTable, connection.getBorrowers());
            filterTable(borrowersTable, borrowerSearch.getText());
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void updateFinesTable() {
        try {
            String onlyPaid;
            if (isUnpaidOnly) {
                onlyPaid = "1";
            } else {
                onlyPaid = "0";
            }
            setTable(finesTable, connection.getFines(onlyPaid));
            filterTable(finesTable, "");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void updateBookTable() {
        //setup main table
        try {
            setTable(bookTable, connection.getBooks());
            filterTable(bookTable, searchTextField.getText());
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void updateCheckedTable() {
        //setup checkout out books table
        try {
            setTable(checkedBooksTable, connection.getCheckedOutBooks());
            filterTable(checkedBooksTable, checkedBooksSearch.getText());
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void filterTable(JTable table, String filter) {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) table.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + filter));

        table.setRowSorter(sorter);
    }

    private void setTable(JTable table, ResultSet rs) throws SQLException {
        //clear table
        while (table.getRowCount() > 0) {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }

        //get number of columns
        int columns = rs.getMetaData().getColumnCount();

        //add each element from result set
        while (rs.next()) {
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++) {
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow(rs.getRow() - 1, row);
        }

        //close result set
        rs.close();

    }

    /**
     * Finds the index of a row that matches a given isbn number
     *
     * @param isbn isbn to search for
     * @return index that is found
     */
    private int findByISBN(String isbn) {

        //filter the table on nothing, getraw
        filterTable(bookTable, "");

        //for each JTable element
        for (int i = 0; i < bookTable.getRowCount(); i++) {
            //get isbn at this row
            String currISBN = (String) bookTable.getModel().getValueAt(i, 0);
            //if this isbn matches
            if (isbn.equals(currISBN)) {
                //filter the table on the search bar
                filterTable(bookTable, searchTextField.getText());
                //return this index
                return i;
            }
        }

        //filter the table on the search bar
        filterTable(bookTable, searchTextField.getText());

        //return -1 if not found
        return -1;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        searchTextField = new javax.swing.JTextField();
        Check_Out_Button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        checkedBooksTable = new javax.swing.JTable();
        Check_In_Button = new javax.swing.JButton();
        checkedBooksSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        borrowersTable = new javax.swing.JTable();
        borrowerSearch = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        finesTable = new javax.swing.JTable();
        updateFines_Button = new javax.swing.JButton();
        payFine_Button = new javax.swing.JButton();
        unpaid_Check = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ssn_text = new javax.swing.JTextField();
        first_text = new javax.swing.JTextField();
        last_text = new javax.swing.JTextField();
        address_text = new javax.swing.JTextField();
        city_text = new javax.swing.JTextField();
        state_text = new javax.swing.JTextField();
        email_text = new javax.swing.JTextField();
        phone_text = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        add_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setAlignmentX(0.0F);

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Book", "Author", "Available?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bookTable);

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        Check_Out_Button.setText("Check Out");
        Check_Out_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Check_Out_ButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Search:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Check_Out_Button)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Check_Out_Button)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Book Search", jPanel1);

        checkedBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ISBN", "Title", "Checked Out Date", "Due Date", "Checked Out To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(checkedBooksTable);

        Check_In_Button.setText("Check In");
        Check_In_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Check_In_ButtonActionPerformed(evt);
            }
        });

        checkedBooksSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkedBooksSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Search:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(checkedBooksSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(Check_In_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Check_In_Button)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkedBooksSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Check In", jPanel2);

        borrowersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Card Number", "SSN", "Name", "Address", "Email", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(borrowersTable);

        borrowerSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                borrowerSearchKeyReleased(evt);
            }
        });

        jLabel12.setText("Search:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(borrowerSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addGap(127, 127, 127))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrowerSearch)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Borrowers", jPanel3);

        finesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Loan ID", "Fine Amount", "Title", "Borrower", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(finesTable);

        updateFines_Button.setText("Update Fines");
        updateFines_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFines_ButtonActionPerformed(evt);
            }
        });

        payFine_Button.setText("Pay Fine");
        payFine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payFine_ButtonActionPerformed(evt);
            }
        });

        unpaid_Check.setText("Unpaid Fines");
        unpaid_Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unpaid_CheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(unpaid_Check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(payFine_Button)
                .addGap(18, 18, 18)
                .addComponent(updateFines_Button)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFines_Button)
                    .addComponent(payFine_Button)
                    .addComponent(unpaid_Check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Fines", jPanel4);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Add Borrower");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("SSN:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("First Name:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Last Name:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Address:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("City:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("State Code:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Email:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Phone:");

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ssn_text, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(first_text, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(last_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address_text, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(city_text, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(state_text)
                            .addComponent(email_text))))
                .addGap(62, 62, 62))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ssn_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(address_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(first_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(city_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(last_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(state_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(email_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(add_button)
                .addGap(81, 81, 81))
        );

        jTabbedPane1.addTab("Add Borrower", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Book Search");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Check_Out_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Check_Out_ButtonActionPerformed
        //get selected isbn
        int[] allSelected = bookTable.getSelectedRows();

        if (allSelected.length == 0) {
            Toast.makeToast(this, "Please select a book to checkout!", Toast.DURATION_LONG);
            return;
        }

        for (int i = 0; i < allSelected.length; i++) {
            int selected = allSelected[i];
            int modelRow = bookTable.convertRowIndexToModel(selected);
            String isbn = (String) bookTable.getModel().getValueAt(modelRow, 0);
            String isAvailable = (String) bookTable.getModel().getValueAt(modelRow, 3);
            String title = (String) bookTable.getModel().getValueAt(modelRow, 1);

            if (isAvailable.equals("No")) {
                Toast.makeToast(this, title + " is already checked out.", Toast.DURATION_LONG);
                return;
            }
            //ask for borrower number
            String borrowerNumber = "";
            Referencer<String> borrowerRef = new Referencer<>(borrowerNumber);
            CheckOutDialog dialog = new CheckOutDialog(this, true, isbn, borrowerRef);
            dialog.setVisible(true);

            //retreive borrower number
            borrowerNumber = borrowerRef.get();

            if (borrowerNumber.equals("-1")) {
                return;
            }
            //send sql command
            try {
                connection.checkoutBook(isbn, borrowerNumber);
                bookTable.getModel().setValueAt("No", modelRow, 3);
                updateCheckedTable();
                Toast.makeToast(this, title + " checked out successfully!", Toast.DURATION_LONG);
            } catch (SQLException e) {
                Toast.makeToast(this, "Book couldn't be checked out, message: " + e.getMessage(), Toast.DURATION_MEDIUM);
            }
            if (allSelected.length > 1) {
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_Check_Out_ButtonActionPerformed

    private void Check_In_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Check_In_ButtonActionPerformed
        //get selected isbn
        int[] allSelected = checkedBooksTable.getSelectedRows();

        if (allSelected.length == 0) {
            Toast.makeToast(this, "Please select a book to check in!", Toast.DURATION_LONG);
            return;
        }
        for (int i = allSelected.length - 1; i >= 0; i--) {
            int selected = allSelected[i];
            int modelRow = checkedBooksTable.convertRowIndexToModel(selected);
            String isbn = (String) checkedBooksTable.getModel().getValueAt(modelRow, 0);

            //check in book
            try {
                connection.checkInBook(isbn);
                ((DefaultTableModel) checkedBooksTable.getModel()).removeRow(modelRow);
                int index = findByISBN(isbn);
                bookTable.getModel().setValueAt("Yes", index, 3);
            } catch (SQLException e) {
                Toast.makeToast(this, "Had an issue checking in...", Toast.DURATION_MEDIUM);
            }
            updateFinesTable();
            Toast.makeToast(this, "Checked in!", Toast.DURATION_SHORT);
        }

    }//GEN-LAST:event_Check_In_ButtonActionPerformed

    private void unpaid_CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unpaid_CheckActionPerformed
        isUnpaidOnly = !isUnpaidOnly;
        if (isUnpaidOnly) {
            filterTable(finesTable, "UnPaid");
        } else {
            filterTable(finesTable, "");
        }
    }//GEN-LAST:event_unpaid_CheckActionPerformed

    private void updateFines_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFines_ButtonActionPerformed
        try {
            connection.updateFines();
        } catch (SQLException ex) {
            Toast.makeToast(this, "Could not update fines", Toast.DURATION_MEDIUM);
        }
        updateFinesTable();
    }//GEN-LAST:event_updateFines_ButtonActionPerformed

    private void payFine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payFine_ButtonActionPerformed
        //get selected isbn
        int[] allSelected = finesTable.getSelectedRows();

        boolean aFinePaid = false;
        if (allSelected.length == 0) {
            Toast.makeToast(this, "Please select a fine!", Toast.DURATION_LONG);
            return;
        }
        for (int i = 0; i < allSelected.length; i++) {
            int selected = allSelected[i];
            int modelRow = finesTable.convertRowIndexToModel(selected);
            int loanNumber = (int) finesTable.getModel().getValueAt(modelRow, 0);
            String status = (String) finesTable.getModel().getValueAt(modelRow, 4);

            if (status.equals("Paid")) {
                if (allSelected.length == 1) {
                    Toast.makeToast(this, "Fine is already Paid!", Toast.DURATION_LONG);
                }
                continue;
            }
            try {
                aFinePaid = true;
                connection.payFine(String.valueOf(loanNumber));
            } catch (SQLException e) {
                Toast.makeToast(this, "Problem paying fine, please try again.", Toast.DURATION_MEDIUM);
            }
        }
        updateFinesTable();
        
        for(int i = 0; i < allSelected.length; i++)
        {
            finesTable.setRowSelectionInterval(allSelected[i], allSelected[i]);
        }
        if (aFinePaid)
            Toast.makeToast(this, "Fine(s) Paid!", Toast.DURATION_LONG);
    }//GEN-LAST:event_payFine_ButtonActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        if (ssn_text.getText().equals("")
                || first_text.getText().equals("")
                || last_text.getText().equals("")
                || address_text.getText().equals("")
                || city_text.getText().equals("")
                || state_text.getText().equals("")
                || email_text.getText().equals("")
                || phone_text.getText().equals("")) {
            Toast.makeToast(this, "All fields must be filled out", Toast.DURATION_LONG);
            return;
        }

        if (state_text.getText().length() != 2) {
            Toast.makeToast(this, "State must be state code only", Toast.DURATION_LONG);
            return;
        }

        try {
            connection.addBorrower(ssn_text.getText(), first_text.getText(),
                    last_text.getText(),
                    address_text.getText(),
                    city_text.getText(),
                    state_text.getText(),
                    email_text.getText(),
                    phone_text.getText());
        } catch (SQLException e) {
            if (!e.getMessage().startsWith("New Card ID is ")) {
                Toast.makeToast(this, e.getMessage(), Toast.DURATION_MEDIUM);
            } else {
                Toast.makeToast(this, e.getMessage(), Toast.DURATION_MEDIUM);
                clearBorrowerScreen();
                updateBorrowersTable();
            }
        }
    }//GEN-LAST:event_add_buttonActionPerformed

    private void borrowerSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrowerSearchKeyReleased
        filterTable(borrowersTable, borrowerSearch.getText());
    }//GEN-LAST:event_borrowerSearchKeyReleased

    private void checkedBooksSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkedBooksSearchKeyReleased
        filterTable(checkedBooksTable, checkedBooksSearch.getText());
    }//GEN-LAST:event_checkedBooksSearchKeyReleased

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        filterTable(bookTable, searchTextField.getText());
    }//GEN-LAST:event_searchTextFieldKeyReleased

    public void clearBorrowerScreen() {
        ssn_text.setText("");
        first_text.setText("");
        last_text.setText("");
        address_text.setText("");
        city_text.setText("");
        state_text.setText("");
        email_text.setText("");
        phone_text.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Check_In_Button;
    private javax.swing.JButton Check_Out_Button;
    private javax.swing.JButton add_button;
    private javax.swing.JTextField address_text;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField borrowerSearch;
    private javax.swing.JTable borrowersTable;
    private javax.swing.JTextField checkedBooksSearch;
    private javax.swing.JTable checkedBooksTable;
    private javax.swing.JTextField city_text;
    private javax.swing.JTextField email_text;
    private javax.swing.JTable finesTable;
    private javax.swing.JTextField first_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField last_text;
    private javax.swing.JButton payFine_Button;
    private javax.swing.JTextField phone_text;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField ssn_text;
    private javax.swing.JTextField state_text;
    private javax.swing.JCheckBox unpaid_Check;
    private javax.swing.JButton updateFines_Button;
    // End of variables declaration//GEN-END:variables
}
